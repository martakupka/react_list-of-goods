{"version":3,"sources":["ListControls.js","GoodsList.js","App.js","index.js"],"names":["selectOptions","ListControls","state","goodLength","filterMinLengthGoods","event","value","target","props","changeGoodsList","initialGoods","setState","filter","good","length","reverseGoods","currentGoods","reverse","sortGoods","sort","a","b","localeCompare","resetGoods","sortGoodsByLength","this","className","type","onClick","onChange","map","option","key","React","Component","GoodsList","goods","goodsFromServer","App","shouldShowGoods","changedGoodsList","showGoods","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAuGnCC,E,4MApGbC,MAAQ,CACNC,WAAY,G,EAGdC,qBAAuB,SAACC,GAAW,IACzBC,EAAUD,EAAME,OAAhBD,MADwB,EAEU,EAAKE,MAAvCC,EAFwB,EAExBA,gBAAiBC,EAFO,EAEPA,aAEzB,EAAKC,SAAS,CACZR,WAAYG,IAGdG,EAAgBC,EAAaE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUR,O,EAG7DS,aAAe,WAAO,IAAD,EACuB,EAAKP,MAAvCC,EADW,EACXA,gBAAiBO,EADN,EACMA,aAEzBP,EAAgB,YAAIO,GAAcC,Y,EAGpCC,UAAY,WAAO,IAAD,EAC0B,EAAKV,MAAvCC,EADQ,EACRA,gBAAiBO,EADT,EACSA,aAEzBP,EAAgB,YAAIO,GAAcG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,Q,EAGnEE,WAAa,WAAO,IAAD,EACyB,EAAKf,MAAvCC,EADS,EACTA,gBAAiBC,EADR,EACQA,aAEzB,EAAKC,SAAS,CACZR,WAAY,IAGdM,EAAgBC,I,EAGlBc,kBAAoB,WAAO,IAAD,EACkB,EAAKhB,MAAvCC,EADgB,EAChBA,gBAAiBO,EADD,EACCA,aAEzBP,EAAgB,YAAIO,GAAcG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,OAASO,EAAEP,Y,uDAGtD,IACAX,EAAesB,KAAKvB,MAApBC,WAER,OACE,yBAAKuB,UAAU,uBACb,4BACEC,KAAK,SACLD,UAAU,sBACVE,QAASH,KAAKV,cAHhB,WAQA,4BACEY,KAAK,SACLD,UAAU,sBACVE,QAASH,KAAKP,WAHhB,QAQA,4BACES,KAAK,SACLD,UAAU,sBACVE,QAASH,KAAKF,YAHhB,SAQA,4BACEI,KAAK,SACLD,UAAU,sBACVE,QAASH,KAAKD,mBAHhB,kBAQA,4BACElB,MAAOH,EACPuB,UAAU,gBACVG,SAAUJ,KAAKrB,sBAEdJ,EAAc8B,KAAI,SAAAC,GAAM,OACvB,4BAAQC,IAAKD,EAAQzB,MAAOyB,GAASA,Y,GAvFtBE,IAAMC,WCYlBC,EAdG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIV,UAAU,eACXU,EAAMN,KAAI,SAAAjB,GAAI,OACb,wBAAImB,IAAKnB,EAAMa,UAAU,eACtBb,QCDHwB,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAuDaC,E,4MAnDbpC,MAAQ,CACNqC,iBAAiB,EACjBH,MAAOC,G,EAGT5B,gBAAkB,SAAC+B,GACjB,EAAK7B,SAAS,CACZyB,MAAOI,K,EAIXC,UAAY,WACV,EAAK9B,SAAS,CACZ4B,iBAAiB,K,uDAIX,IAAD,EAC4Bd,KAAKvB,MAAhCqC,EADD,EACCA,gBAAiBH,EADlB,EACkBA,MAEzB,OACE,yBAAKV,UAAU,OACXa,EAWE,yBAAKb,UAAU,SACb,wBAAIA,UAAU,gBAAd,SAEA,kBAAC,EAAD,CACEjB,gBAAiBgB,KAAKhB,gBACtBC,aAAc2B,EACdrB,aAAcoB,IAGhB,kBAAC,EAAD,CAAWA,MAAOA,KAlBpB,4BACET,KAAK,SACLD,UAAU,oBACVE,QAASH,KAAKgB,WAHhB,c,GAzBMR,IAAMC,WCfxBQ,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d42e05e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst selectOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nclass ListControls extends React.Component {\n  state = {\n    goodLength: 1,\n  }\n\n  filterMinLengthGoods = (event) => {\n    const { value } = event.target;\n    const { changeGoodsList, initialGoods } = this.props;\n\n    this.setState({\n      goodLength: value,\n    });\n\n    changeGoodsList(initialGoods.filter(good => good.length >= value));\n  }\n\n  reverseGoods = () => {\n    const { changeGoodsList, currentGoods } = this.props;\n\n    changeGoodsList([...currentGoods].reverse());\n  }\n\n  sortGoods = () => {\n    const { changeGoodsList, currentGoods } = this.props;\n\n    changeGoodsList([...currentGoods].sort((a, b) => a.localeCompare(b)));\n  }\n\n  resetGoods = () => {\n    const { changeGoodsList, initialGoods } = this.props;\n\n    this.setState({\n      goodLength: 1,\n    });\n\n    changeGoodsList(initialGoods);\n  }\n\n  sortGoodsByLength = () => {\n    const { changeGoodsList, currentGoods } = this.props;\n\n    changeGoodsList([...currentGoods].sort((a, b) => a.length - b.length));\n  }\n\n  render() {\n    const { goodLength } = this.state;\n\n    return (\n      <div className=\"goods__sort-buttons\">\n        <button\n          type=\"button\"\n          className=\"goods__buttons-item\"\n          onClick={this.reverseGoods}\n        >\n          reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"goods__buttons-item\"\n          onClick={this.sortGoods}\n        >\n          sort\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"goods__buttons-item\"\n          onClick={this.resetGoods}\n        >\n          reset\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"goods__buttons-item\"\n          onClick={this.sortGoodsByLength}\n        >\n          sort by length\n        </button>\n\n        <select\n          value={goodLength}\n          className=\"goods__select\"\n          onChange={this.filterMinLengthGoods}\n        >\n          {selectOptions.map(option => (\n            <option key={option} value={option}>{option}</option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nListControls.propTypes = {\n  changeGoodsList: PropTypes.func.isRequired,\n  initialGoods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentGoods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ListControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodsList = ({ goods }) => (\n  <ul className=\"goods__list\">\n    {goods.map(good => (\n      <li key={good} className=\"goods__item\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport './App.css';\n\nimport ListControls from './ListControls';\nimport GoodsList from './GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    shouldShowGoods: false,\n    goods: goodsFromServer,\n  }\n\n  changeGoodsList = (changedGoodsList) => {\n    this.setState({\n      goods: changedGoodsList,\n    });\n  }\n\n  showGoods = () => {\n    this.setState({\n      shouldShowGoods: true,\n    });\n  }\n\n  render() {\n    const { shouldShowGoods, goods } = this.state;\n\n    return (\n      <div className=\"app\">\n        {!shouldShowGoods\n          ? (\n            <button\n              type=\"button\"\n              className=\"app__start-button\"\n              onClick={this.showGoods}\n            >\n              start\n            </button>\n          )\n          : (\n            <div className=\"goods\">\n              <h1 className=\"goods__title\">Goods</h1>\n\n              <ListControls\n                changeGoodsList={this.changeGoodsList}\n                initialGoods={goodsFromServer}\n                currentGoods={goods}\n              />\n\n              <GoodsList goods={goods} />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}